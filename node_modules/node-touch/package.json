{
  "name": "node-touch",
  "version": "0.0.3",
  "description": "Extra touch events and hover behaviour for touch devices.",
  "main": "index.js",
  "dependencies": {
    "node-inserted": "*"
  },
  "keywords": [
    "browserify",
    "touch",
    "event",
    "tap",
    "hover",
    "swipe"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/gerhardberger/node-touch.git"
  },
  "homepage": "https://github.com/gerhardberger/node-touch",
  "author": {
    "name": "Gerhard Berger",
    "email": "93.morph@gmail.com",
    "url": "https://twitter.com/gerhard_berger"
  },
  "readme": "## node-touch\r\n\r\n``` batch\r\nnpm install node-touch\r\n```\r\n\r\nExtra touch events and hover behaviour for touch devices.\r\n\r\n``` js\r\nrequire('node-touch')();\r\n```\r\n``` html\r\n<div class=\"touch\">Example</div>\r\n```\r\n\r\nIn order to use the features, you have to call the module once in the beginning and create the dom elements with the `touch` class.\r\n\r\n### hover\r\n``` css\r\ndiv { ... }\r\ndiv.hover { ... }\r\n```\r\nOn touch devices, the hover behaviour is quite crappy. With this module, if you use the `.hover` class instead of the `:hover` pseudoclass, on a touch device the class will be applied when the element is touched on the screen, and on a non-touch device it will act as `:hover`. [example](http://felix.lovassy.hu/projects/gellert/touch/).\r\n\r\n### tap\r\n``` js\r\nvar button = document.createElement('button').\r\nbutton.classList.add('touch');\r\ndocument.body.appendChild(button);\r\n\r\nbutton.addEventListener('tap', function (event) {\r\n  console.log('Tapped!');\r\n}, false);\r\n```\r\nYou can use the `tap` event just as a normal event. It is sort of the touch equivalent of `click`.\r\n\r\n### touchleave\r\n``` js\r\nvar div = document.querySelector('div');\r\n\r\ndiv.addEventListener('touchleave', function (event) {\r\n  console.log('Left!');\r\n}, false);\r\n```\r\nThe event fires when the finger left the element.\r\n\r\n### swipe\r\nYou can add listeners to swipe events. There are three type of swipe events.\r\n``` js\r\ndiv.addEventListener('swipestart', function (event) {});\r\n\r\ndiv.addEventListener('swipemove', function (event) {});\r\n\r\ndiv.addEventListener('swipeend', function (event) {});\r\n```\r\nThe `event` object's important properties are:\r\n- __direction__: `RIGHT`, `LEFT`, `UP`, `DOWN`\r\n- __delta__: how much pixel it moved from the starting touch (relative to the direction)\r\n- __startTouch__: the starting touch object\r\n- __prevTouch__: the previous touch object\r\n- __changedTouch__: the latest touch object\r\n\r\n### window.isTouchDevice\r\nThis module sets a global _Boolean_ that just tells you whether the user is on a touch device. It can be useful!",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gerhardberger/node-touch/issues"
  },
  "_id": "node-touch@0.0.3",
  "dist": {
    "shasum": "665613dd5029463b05b6d30bcb32c229ef43491f",
    "tarball": "http://registry.npmjs.org/node-touch/-/node-touch-0.0.3.tgz"
  },
  "_from": "node-touch@*",
  "_npmVersion": "1.2.21",
  "_npmUser": {
    "name": "gerhardberger",
    "email": "93.morph@gmail.com"
  },
  "maintainers": [
    {
      "name": "gerhardberger",
      "email": "93.morph@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "665613dd5029463b05b6d30bcb32c229ef43491f",
  "_resolved": "https://registry.npmjs.org/node-touch/-/node-touch-0.0.3.tgz"
}
